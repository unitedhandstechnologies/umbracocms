@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<OBlog>
@using Oski.Core.Helpers
@{
    Layout = "main.cshtml";

    var model = Model.Children.Cast<OBlogpost>();

    var sortlink = !string.IsNullOrWhiteSpace(Context.Request.Query["sort"].ToString()) ? $"&sort={Context.Request.Query["sort"].ToString()}" : "";

    sortlink += !string.IsNullOrWhiteSpace(Context.Request.Query["category"].ToString()) ? $"&category={Context.Request.Query["category"].ToString()}" : "";

    sortlink += !string.IsNullOrWhiteSpace(Context.Request.Query["tag"].ToString()) ? $"&tag={Context.Request.Query["tag"].ToString()}" : "";

    int take = Model.OTake;

    model = Model.Children.Cast<OBlogpost>();

    if (!string.IsNullOrWhiteSpace(Context.Request.Query["category"].ToString()))
        model = model.Where((x) => x.OCategories.ToLower() == Context.Request.Query["category"].ToString());
    if (!string.IsNullOrWhiteSpace(Context.Request.Query["tag"].ToString()))
        model = model.Where((x) => x.OTags.Select((t) => t.ToLower()).ContainsAny(Context.Request.Query["tag"].ToString().ToLower().Split(",")));

    var orderby = model.OrderByDescending(x => x.CreateDate);

    double maxPage = Math.Ceiling((double)(model.Count()) / take);

    if (int.TryParse(Context.Request.Query["page"], out int page))
    {
        if (page < 1 || page > maxPage)
        {
            Context.Response.Redirect(Model.Url());
        }
    }
    else
    {
        page = 1;
    }

    var blogposts = orderby.Skip(take * (page - 1)).Take(take).ToList();

}
<main class="inner-page">

    @Html.Partial("oskiPartials/OFullScreenTopContainer")

    <section class="content">
        <div class="container">
            <div class="content__inner">
                @Html.Partial("oskiPartials/oCategoriesMenuForNews")
                @if (blogposts.Any())
                {
                    <div class="content-info blog-container">

                        @foreach (OBlogpost blogpost in blogposts)
                        {
                            var tags = blogpost.OTags;
                            var imageUrl = blogpost.OPreviewImage?.Url() ?? string.Empty;
                            var imageHeight = blogpost.OPreviewImage?.Value<int>("umbracoHeight");
                            var imageWidth = blogpost.OPreviewImage?.Value<int>("umbracoWidth");

                            <div class="blogpost">
                                <a class="blogpost-link" href="@blogpost.Url()">
                                    @if (!string.IsNullOrEmpty(imageUrl))
                                    {
                                        <div class="blogpost-image">
                                            <img style="width: @(imageWidth > imageHeight ? "100%" : "" )" src="@imageUrl" />
                                        </div>
                                    }
                                    <div class="blogpost-info">

                                        <div class="blogpost-title">@blogpost.OTitle</div>
                                        <div class="blogpost-description">@blogpost.ODescription</div>
                                        @if (blogpost.OTags.Any())
                                        {
                                            <div>
                                                <div class="blogpost-tags">
                                                    @foreach (var tag in blogpost.OTags)
                                                    {
                                                        <span class="blogpost-tag">@tag</span>
                                                    }
                                                </div>
                                            </div>
                                        }
                                    </div>
                                    <div class="blogpost-footer">
                                        <div><img src="~/Content/images/IconUser.png" /> @blogpost.WriterName() | @blogpost.CreateDate.ToString("MMMM d, yyyy")</div>
                                        <div>
                                            @{
                                                var readtime = CalculationTime.CalculationReadTime(new IPublishedElement[] { blogpost });
                                            }
                                            Read Time: <span class="blogpost-footer__time">@readtime min</span>
                                        </div>
                                    </div>
                                </a>
                            </div>

                        }
                        @if ((blogposts.Count % 2) == 0)
                        {
                            <div class="blogpost"></div>
                        }
                        <div class="pagination-container">
                            <div class="pagination">
                                <ul class="pagination__block">
                                    <li class="pagination__item @((page-1)<1 ? "d-none" : "" )">
                                        <a href="@($"{Model.Url()}?page={page-1}{sortlink}")">&#129152</a>
                                    </li>
                                    <li class="pagination__item @((page-3)<1 ? "d-none" : "" )">
                                        <a href="@($"{Model.Url()}?page={1}{sortlink}")">1</a>
                                    </li>
                                    <li class="pagination__item @((page-4)<1 ? "d-none" : "" )">...</li>
                                    <li class="pagination__item @((page-2)<1 ? "d-none" : "" )">
                                        <a href="@($"{Model.Url()}?page={page-2}{sortlink}")">@(page-2)</a>
                                    </li>
                                    <li class="pagination__item @((page-1)<1 ? "d-none" : "" )">
                                        <a href="@($"{Model.Url()}?page={page-1}{sortlink}")">@(page-1)</a>
                                    </li>
                                    <li class="pagination__item active">
                                        <a class="active" href="@($"{Model.Url()}?page={page}{sortlink}")">@(page)</a>
                                    </li>
                                    <li class="pagination__item @((page+1)>maxPage ? "d-none" : "" )">
                                        <a href="@($"{Model.Url()}?page={page+1}{sortlink}")">@(page+1)</a>
                                    </li>
                                    <li class="pagination__item @((page+2)>maxPage ? "d-none" : "" )">
                                        <a href="@($"{Model.Url()}?page={page+2}{sortlink}")">@(page+2)</a>
                                    </li>
                                    <li class="pagination__item @((page+4)>maxPage ? "d-none" : "" )">...</li>
                                    <li class="pagination__item @((page+3)>maxPage ? "d-none" : "" )">
                                        <a href="@($"{Model.Url()}?page={maxPage}{sortlink}")">@maxPage</a>
                                    </li>
                                    <li class="pagination__item @((page+1)>maxPage ? "d-none" : "" )">
                                        <a href="@($"{Model.Url()}?page={page+1}{sortlink}")">&#129154</a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </section>
</main>