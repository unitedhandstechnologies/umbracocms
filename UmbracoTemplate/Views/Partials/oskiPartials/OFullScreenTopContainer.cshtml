@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<IOFullScreenTopContainer>
@using System.Text.RegularExpressions

@{

    string pattern = @"\w*.mp4|.ogg|.webm$";
    Regex rgx = new Regex(pattern);

    var imageOrVideoMobile = Model.OImageOrVideoMobile == null ? Model.OImageOrVideoDesktop : Model.OImageOrVideoMobile;

    var imageMobile = "#";
    var imageDesktop = "#";
    var videoDesktop = "#";
    var videoMobile = "#";
    var posterMobile = "#";
    var posterDesktop = "#";

    if (Model.OImageOrVideoDesktop != null)
    {
        (videoDesktop, imageDesktop) = rgx.IsMatch(Model.OImageOrVideoDesktop.Url()) ? (videoDesktop = Model.OImageOrVideoDesktop.Url(), imageDesktop = "#") : (videoDesktop = "#", imageDesktop = Model.OImageOrVideoDesktop.Url());
        (videoMobile, imageMobile) = rgx.IsMatch(imageOrVideoMobile.Url()) ? (videoMobile = imageOrVideoMobile.Url(), imageMobile = "#") : (videoMobile = "#", imageMobile = imageOrVideoMobile.Url());
    }
    if ((videoDesktop != "#") || (videoMobile != "#"))
    {
        var posterDefault = Model.OPoster == null ? "../Content/images/error-page-bg.jpg" : Model.OPoster.Url();
        posterMobile = videoMobile != "#" ? posterDefault : "#";
        posterDesktop = videoDesktop != "#" ? posterDefault : "#";
    }


    var color = Model.OFontColor != null ? $"#{Model.OFontColor}" : String.Empty;
    var fontsize = string.IsNullOrEmpty(Model.OFontSize) ? "h1" : Model.OFontSize;
}


<section class="top @(string.IsNullOrWhiteSpace(Model.OTitle) ? "only_image" : "")" style="position:relative;">
    @if (imageDesktop != "#")
    {
        <img src="@imageDesktop" class="video_fullscreen_Desktop" />
    }
    @if (imageMobile != "#")
    {
        <img src="@imageMobile" class="video_fullscreen_Mobile" />
    }
    @if (videoDesktop != "#")
    {
        <video src="@videoDesktop" autoplay loop muted preload="metadata" class="video_fullscreen_Desktop" poster="@posterDesktop"></video>
    }
    @if (videoMobile != "#")
    {
    <video src="@videoMobile" autoplay loop muted preload="metadata" class="video_fullscreen_Mobile" poster="@posterMobile"></video>
    }

    <div class="container">
        <div class="top__inner">
            <div class="top__content">
                @Html.Raw(string.Format("<{0} class=\"top__title\" style=\"color: {1};\">", fontsize, color))
                @Model.OTitle
                @Html.Raw(string.Format("</{0}>", fontsize))
                @if (Model.OItems.Count() == 1)
                {
                    <p class="top__subtitle">@Model.OItems.FirstOrDefault()</p>
                }
                else
                {
                    <ul class="top__list">
                        @foreach (string description in Model.OItems)
                        {
                            <li>
                                <p class="top__list-item">@description</p>
                            </li>
                        }
                    </ul>
                }

            </div>
        </div>
    </div>

</section>
